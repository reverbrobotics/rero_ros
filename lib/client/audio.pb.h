// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: audio.proto
// Protobuf C++ Version: 6.31.1

#ifndef audio_2eproto_2epb_2eh
#define audio_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6031001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_audio_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_audio_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_audio_2eproto;
}  // extern "C"
namespace rero {
class Audio;
struct AudioDefaultTypeInternal;
extern AudioDefaultTypeInternal _Audio_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull Audio_class_data_;
class PlayResult;
struct PlayResultDefaultTypeInternal;
extern PlayResultDefaultTypeInternal _PlayResult_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull PlayResult_class_data_;
class StreamRequest;
struct StreamRequestDefaultTypeInternal;
extern StreamRequestDefaultTypeInternal _StreamRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull StreamRequest_class_data_;
}  // namespace rero
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace rero {

// ===================================================================


// -------------------------------------------------------------------

class StreamRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:rero.StreamRequest) */ {
 public:
  inline StreamRequest() : StreamRequest(nullptr) {}
  ~StreamRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(StreamRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(StreamRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StreamRequest(::google::protobuf::internal::ConstantInitialized);

  inline StreamRequest(const StreamRequest& from) : StreamRequest(nullptr, from) {}
  inline StreamRequest(StreamRequest&& from) noexcept
      : StreamRequest(nullptr, ::std::move(from)) {}
  inline StreamRequest& operator=(const StreamRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline StreamRequest& operator=(StreamRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StreamRequest& default_instance() {
    return *reinterpret_cast<const StreamRequest*>(
        &_StreamRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(StreamRequest& a, StreamRequest& b) { a.Swap(&b); }
  inline void Swap(StreamRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StreamRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StreamRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<StreamRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StreamRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const StreamRequest& from) { StreamRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(StreamRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "rero.StreamRequest"; }

 protected:
  explicit StreamRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  StreamRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const StreamRequest& from);
  StreamRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, StreamRequest&& from) noexcept
      : StreamRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFormatFieldNumber = 3,
    kSampleRateFieldNumber = 1,
    kNumChannelsFieldNumber = 2,
    kFramesPerBufferFieldNumber = 4,
    kBytesPerSampleFieldNumber = 5,
  };
  // string format = 3;
  void clear_format() ;
  const ::std::string& format() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_format(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_format();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_format();
  void set_allocated_format(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_format() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_format(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_format();

  public:
  // uint32 sample_rate = 1;
  void clear_sample_rate() ;
  ::uint32_t sample_rate() const;
  void set_sample_rate(::uint32_t value);

  private:
  ::uint32_t _internal_sample_rate() const;
  void _internal_set_sample_rate(::uint32_t value);

  public:
  // uint32 num_channels = 2;
  void clear_num_channels() ;
  ::uint32_t num_channels() const;
  void set_num_channels(::uint32_t value);

  private:
  ::uint32_t _internal_num_channels() const;
  void _internal_set_num_channels(::uint32_t value);

  public:
  // uint32 frames_per_buffer = 4;
  void clear_frames_per_buffer() ;
  ::uint32_t frames_per_buffer() const;
  void set_frames_per_buffer(::uint32_t value);

  private:
  ::uint32_t _internal_frames_per_buffer() const;
  void _internal_set_frames_per_buffer(::uint32_t value);

  public:
  // uint32 bytes_per_sample = 5;
  void clear_bytes_per_sample() ;
  ::uint32_t bytes_per_sample() const;
  void set_bytes_per_sample(::uint32_t value);

  private:
  ::uint32_t _internal_bytes_per_sample() const;
  void _internal_set_bytes_per_sample(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:rero.StreamRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5,
                                   0, 33,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const StreamRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr format_;
    ::uint32_t sample_rate_;
    ::uint32_t num_channels_;
    ::uint32_t frames_per_buffer_;
    ::uint32_t bytes_per_sample_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_audio_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull StreamRequest_class_data_;
// -------------------------------------------------------------------

class PlayResult final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:rero.PlayResult) */ {
 public:
  inline PlayResult() : PlayResult(nullptr) {}
  ~PlayResult() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PlayResult* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PlayResult));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PlayResult(::google::protobuf::internal::ConstantInitialized);

  inline PlayResult(const PlayResult& from) : PlayResult(nullptr, from) {}
  inline PlayResult(PlayResult&& from) noexcept
      : PlayResult(nullptr, ::std::move(from)) {}
  inline PlayResult& operator=(const PlayResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline PlayResult& operator=(PlayResult&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PlayResult& default_instance() {
    return *reinterpret_cast<const PlayResult*>(
        &_PlayResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(PlayResult& a, PlayResult& b) { a.Swap(&b); }
  inline void Swap(PlayResult* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PlayResult* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PlayResult* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PlayResult>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PlayResult& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PlayResult& from) { PlayResult::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PlayResult* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "rero.PlayResult"; }

 protected:
  explicit PlayResult(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  PlayResult(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const PlayResult& from);
  PlayResult(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, PlayResult&& from) noexcept
      : PlayResult(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPaErrorMsgFieldNumber = 2,
    kPaErrorCodeFieldNumber = 1,
  };
  // string pa_error_msg = 2;
  void clear_pa_error_msg() ;
  const ::std::string& pa_error_msg() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_pa_error_msg(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_pa_error_msg();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_pa_error_msg();
  void set_allocated_pa_error_msg(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_pa_error_msg() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_pa_error_msg(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_pa_error_msg();

  public:
  // uint32 pa_error_code = 1;
  void clear_pa_error_code() ;
  ::uint32_t pa_error_code() const;
  void set_pa_error_code(::uint32_t value);

  private:
  ::uint32_t _internal_pa_error_code() const;
  void _internal_set_pa_error_code(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:rero.PlayResult)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 36,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const PlayResult& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr pa_error_msg_;
    ::uint32_t pa_error_code_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_audio_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull PlayResult_class_data_;
// -------------------------------------------------------------------

class Audio final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:rero.Audio) */ {
 public:
  inline Audio() : Audio(nullptr) {}
  ~Audio() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Audio* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Audio));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Audio(::google::protobuf::internal::ConstantInitialized);

  inline Audio(const Audio& from) : Audio(nullptr, from) {}
  inline Audio(Audio&& from) noexcept
      : Audio(nullptr, ::std::move(from)) {}
  inline Audio& operator=(const Audio& from) {
    CopyFrom(from);
    return *this;
  }
  inline Audio& operator=(Audio&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Audio& default_instance() {
    return *reinterpret_cast<const Audio*>(
        &_Audio_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(Audio& a, Audio& b) { a.Swap(&b); }
  inline void Swap(Audio* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Audio* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Audio* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Audio>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Audio& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Audio& from) { Audio::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Audio* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "rero.Audio"; }

 protected:
  explicit Audio(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  Audio(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Audio& from);
  Audio(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, Audio&& from) noexcept
      : Audio(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRawDataFieldNumber = 6,
    kNumSamplesFieldNumber = 1,
    kNumChannelsFieldNumber = 2,
    kBytesPerSampleFieldNumber = 3,
    kFramesPerBufferFieldNumber = 4,
    kSampleRateFieldNumber = 5,
  };
  // bytes raw_data = 6;
  void clear_raw_data() ;
  const ::std::string& raw_data() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_raw_data(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_raw_data();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_raw_data();
  void set_allocated_raw_data(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_raw_data() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_raw_data(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_raw_data();

  public:
  // uint32 num_samples = 1;
  void clear_num_samples() ;
  ::uint32_t num_samples() const;
  void set_num_samples(::uint32_t value);

  private:
  ::uint32_t _internal_num_samples() const;
  void _internal_set_num_samples(::uint32_t value);

  public:
  // uint32 num_channels = 2;
  void clear_num_channels() ;
  ::uint32_t num_channels() const;
  void set_num_channels(::uint32_t value);

  private:
  ::uint32_t _internal_num_channels() const;
  void _internal_set_num_channels(::uint32_t value);

  public:
  // uint32 bytes_per_sample = 3;
  void clear_bytes_per_sample() ;
  ::uint32_t bytes_per_sample() const;
  void set_bytes_per_sample(::uint32_t value);

  private:
  ::uint32_t _internal_bytes_per_sample() const;
  void _internal_set_bytes_per_sample(::uint32_t value);

  public:
  // uint32 frames_per_buffer = 4;
  void clear_frames_per_buffer() ;
  ::uint32_t frames_per_buffer() const;
  void set_frames_per_buffer(::uint32_t value);

  private:
  ::uint32_t _internal_frames_per_buffer() const;
  void _internal_set_frames_per_buffer(::uint32_t value);

  public:
  // uint32 sample_rate = 5;
  void clear_sample_rate() ;
  ::uint32_t sample_rate() const;
  void set_sample_rate(::uint32_t value);

  private:
  ::uint32_t _internal_sample_rate() const;
  void _internal_set_sample_rate(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:rero.Audio)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 6,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const Audio& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr raw_data_;
    ::uint32_t num_samples_;
    ::uint32_t num_channels_;
    ::uint32_t bytes_per_sample_;
    ::uint32_t frames_per_buffer_;
    ::uint32_t sample_rate_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_audio_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull Audio_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// StreamRequest

// uint32 sample_rate = 1;
inline void StreamRequest::clear_sample_rate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sample_rate_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint32_t StreamRequest::sample_rate() const {
  // @@protoc_insertion_point(field_get:rero.StreamRequest.sample_rate)
  return _internal_sample_rate();
}
inline void StreamRequest::set_sample_rate(::uint32_t value) {
  _internal_set_sample_rate(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:rero.StreamRequest.sample_rate)
}
inline ::uint32_t StreamRequest::_internal_sample_rate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sample_rate_;
}
inline void StreamRequest::_internal_set_sample_rate(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sample_rate_ = value;
}

// uint32 num_channels = 2;
inline void StreamRequest::clear_num_channels() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.num_channels_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint32_t StreamRequest::num_channels() const {
  // @@protoc_insertion_point(field_get:rero.StreamRequest.num_channels)
  return _internal_num_channels();
}
inline void StreamRequest::set_num_channels(::uint32_t value) {
  _internal_set_num_channels(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:rero.StreamRequest.num_channels)
}
inline ::uint32_t StreamRequest::_internal_num_channels() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.num_channels_;
}
inline void StreamRequest::_internal_set_num_channels(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.num_channels_ = value;
}

// string format = 3;
inline void StreamRequest::clear_format() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.format_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& StreamRequest::format() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rero.StreamRequest.format)
  return _internal_format();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void StreamRequest::set_format(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.format_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rero.StreamRequest.format)
}
inline ::std::string* PROTOBUF_NONNULL StreamRequest::mutable_format()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_format();
  // @@protoc_insertion_point(field_mutable:rero.StreamRequest.format)
  return _s;
}
inline const ::std::string& StreamRequest::_internal_format() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.format_.Get();
}
inline void StreamRequest::_internal_set_format(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.format_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL StreamRequest::_internal_mutable_format() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.format_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE StreamRequest::release_format() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rero.StreamRequest.format)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.format_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.format_.Set("", GetArena());
  }
  return released;
}
inline void StreamRequest::set_allocated_format(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.format_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.format_.IsDefault()) {
    _impl_.format_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rero.StreamRequest.format)
}

// uint32 frames_per_buffer = 4;
inline void StreamRequest::clear_frames_per_buffer() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.frames_per_buffer_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::uint32_t StreamRequest::frames_per_buffer() const {
  // @@protoc_insertion_point(field_get:rero.StreamRequest.frames_per_buffer)
  return _internal_frames_per_buffer();
}
inline void StreamRequest::set_frames_per_buffer(::uint32_t value) {
  _internal_set_frames_per_buffer(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:rero.StreamRequest.frames_per_buffer)
}
inline ::uint32_t StreamRequest::_internal_frames_per_buffer() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.frames_per_buffer_;
}
inline void StreamRequest::_internal_set_frames_per_buffer(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.frames_per_buffer_ = value;
}

// uint32 bytes_per_sample = 5;
inline void StreamRequest::clear_bytes_per_sample() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bytes_per_sample_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::uint32_t StreamRequest::bytes_per_sample() const {
  // @@protoc_insertion_point(field_get:rero.StreamRequest.bytes_per_sample)
  return _internal_bytes_per_sample();
}
inline void StreamRequest::set_bytes_per_sample(::uint32_t value) {
  _internal_set_bytes_per_sample(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:rero.StreamRequest.bytes_per_sample)
}
inline ::uint32_t StreamRequest::_internal_bytes_per_sample() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bytes_per_sample_;
}
inline void StreamRequest::_internal_set_bytes_per_sample(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bytes_per_sample_ = value;
}

// -------------------------------------------------------------------

// PlayResult

// uint32 pa_error_code = 1;
inline void PlayResult::clear_pa_error_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pa_error_code_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint32_t PlayResult::pa_error_code() const {
  // @@protoc_insertion_point(field_get:rero.PlayResult.pa_error_code)
  return _internal_pa_error_code();
}
inline void PlayResult::set_pa_error_code(::uint32_t value) {
  _internal_set_pa_error_code(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:rero.PlayResult.pa_error_code)
}
inline ::uint32_t PlayResult::_internal_pa_error_code() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pa_error_code_;
}
inline void PlayResult::_internal_set_pa_error_code(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pa_error_code_ = value;
}

// string pa_error_msg = 2;
inline void PlayResult::clear_pa_error_msg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pa_error_msg_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& PlayResult::pa_error_msg() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rero.PlayResult.pa_error_msg)
  return _internal_pa_error_msg();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void PlayResult::set_pa_error_msg(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.pa_error_msg_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rero.PlayResult.pa_error_msg)
}
inline ::std::string* PROTOBUF_NONNULL PlayResult::mutable_pa_error_msg()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_pa_error_msg();
  // @@protoc_insertion_point(field_mutable:rero.PlayResult.pa_error_msg)
  return _s;
}
inline const ::std::string& PlayResult::_internal_pa_error_msg() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pa_error_msg_.Get();
}
inline void PlayResult::_internal_set_pa_error_msg(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.pa_error_msg_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL PlayResult::_internal_mutable_pa_error_msg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.pa_error_msg_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE PlayResult::release_pa_error_msg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rero.PlayResult.pa_error_msg)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.pa_error_msg_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.pa_error_msg_.Set("", GetArena());
  }
  return released;
}
inline void PlayResult::set_allocated_pa_error_msg(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.pa_error_msg_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.pa_error_msg_.IsDefault()) {
    _impl_.pa_error_msg_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rero.PlayResult.pa_error_msg)
}

// -------------------------------------------------------------------

// Audio

// uint32 num_samples = 1;
inline void Audio::clear_num_samples() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.num_samples_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint32_t Audio::num_samples() const {
  // @@protoc_insertion_point(field_get:rero.Audio.num_samples)
  return _internal_num_samples();
}
inline void Audio::set_num_samples(::uint32_t value) {
  _internal_set_num_samples(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:rero.Audio.num_samples)
}
inline ::uint32_t Audio::_internal_num_samples() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.num_samples_;
}
inline void Audio::_internal_set_num_samples(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.num_samples_ = value;
}

// uint32 num_channels = 2;
inline void Audio::clear_num_channels() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.num_channels_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint32_t Audio::num_channels() const {
  // @@protoc_insertion_point(field_get:rero.Audio.num_channels)
  return _internal_num_channels();
}
inline void Audio::set_num_channels(::uint32_t value) {
  _internal_set_num_channels(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:rero.Audio.num_channels)
}
inline ::uint32_t Audio::_internal_num_channels() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.num_channels_;
}
inline void Audio::_internal_set_num_channels(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.num_channels_ = value;
}

// uint32 bytes_per_sample = 3;
inline void Audio::clear_bytes_per_sample() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bytes_per_sample_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::uint32_t Audio::bytes_per_sample() const {
  // @@protoc_insertion_point(field_get:rero.Audio.bytes_per_sample)
  return _internal_bytes_per_sample();
}
inline void Audio::set_bytes_per_sample(::uint32_t value) {
  _internal_set_bytes_per_sample(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:rero.Audio.bytes_per_sample)
}
inline ::uint32_t Audio::_internal_bytes_per_sample() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bytes_per_sample_;
}
inline void Audio::_internal_set_bytes_per_sample(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bytes_per_sample_ = value;
}

// uint32 frames_per_buffer = 4;
inline void Audio::clear_frames_per_buffer() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.frames_per_buffer_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::uint32_t Audio::frames_per_buffer() const {
  // @@protoc_insertion_point(field_get:rero.Audio.frames_per_buffer)
  return _internal_frames_per_buffer();
}
inline void Audio::set_frames_per_buffer(::uint32_t value) {
  _internal_set_frames_per_buffer(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:rero.Audio.frames_per_buffer)
}
inline ::uint32_t Audio::_internal_frames_per_buffer() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.frames_per_buffer_;
}
inline void Audio::_internal_set_frames_per_buffer(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.frames_per_buffer_ = value;
}

// uint32 sample_rate = 5;
inline void Audio::clear_sample_rate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sample_rate_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::uint32_t Audio::sample_rate() const {
  // @@protoc_insertion_point(field_get:rero.Audio.sample_rate)
  return _internal_sample_rate();
}
inline void Audio::set_sample_rate(::uint32_t value) {
  _internal_set_sample_rate(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:rero.Audio.sample_rate)
}
inline ::uint32_t Audio::_internal_sample_rate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sample_rate_;
}
inline void Audio::_internal_set_sample_rate(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sample_rate_ = value;
}

// bytes raw_data = 6;
inline void Audio::clear_raw_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.raw_data_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& Audio::raw_data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rero.Audio.raw_data)
  return _internal_raw_data();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Audio::set_raw_data(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.raw_data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rero.Audio.raw_data)
}
inline ::std::string* PROTOBUF_NONNULL Audio::mutable_raw_data()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_raw_data();
  // @@protoc_insertion_point(field_mutable:rero.Audio.raw_data)
  return _s;
}
inline const ::std::string& Audio::_internal_raw_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.raw_data_.Get();
}
inline void Audio::_internal_set_raw_data(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.raw_data_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Audio::_internal_mutable_raw_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.raw_data_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Audio::release_raw_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rero.Audio.raw_data)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.raw_data_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.raw_data_.Set("", GetArena());
  }
  return released;
}
inline void Audio::set_allocated_raw_data(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.raw_data_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.raw_data_.IsDefault()) {
    _impl_.raw_data_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rero.Audio.raw_data)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace rero


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // audio_2eproto_2epb_2eh
