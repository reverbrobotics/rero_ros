// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: nlu.proto
// Protobuf C++ Version: 6.31.0

#ifndef nlu_2eproto_2epb_2eh
#define nlu_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6031000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_nlu_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_nlu_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_nlu_2eproto;
}  // extern "C"
namespace rero {
class Intent;
struct IntentDefaultTypeInternal;
extern IntentDefaultTypeInternal _Intent_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull Intent_class_data_;
class NLURequest;
struct NLURequestDefaultTypeInternal;
extern NLURequestDefaultTypeInternal _NLURequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull NLURequest_class_data_;
class Slot;
struct SlotDefaultTypeInternal;
extern SlotDefaultTypeInternal _Slot_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull Slot_class_data_;
}  // namespace rero
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace rero {

// ===================================================================


// -------------------------------------------------------------------

class Slot final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:rero.Slot) */ {
 public:
  inline Slot() : Slot(nullptr) {}
  ~Slot() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Slot* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Slot));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Slot(::google::protobuf::internal::ConstantInitialized);

  inline Slot(const Slot& from) : Slot(nullptr, from) {}
  inline Slot(Slot&& from) noexcept
      : Slot(nullptr, ::std::move(from)) {}
  inline Slot& operator=(const Slot& from) {
    CopyFrom(from);
    return *this;
  }
  inline Slot& operator=(Slot&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Slot& default_instance() {
    return *reinterpret_cast<const Slot*>(
        &_Slot_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(Slot& a, Slot& b) { a.Swap(&b); }
  inline void Swap(Slot* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Slot* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Slot* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Slot>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Slot& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Slot& from) { Slot::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Slot* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "rero.Slot"; }

 protected:
  explicit Slot(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  Slot(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Slot& from);
  Slot(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, Slot&& from) noexcept
      : Slot(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRawValueFieldNumber = 1,
    kEntityFieldNumber = 2,
    kSlotNameFieldNumber = 3,
    kRangeStartFieldNumber = 4,
    kRangeEndFieldNumber = 5,
  };
  // string rawValue = 1;
  void clear_rawvalue() ;
  const ::std::string& rawvalue() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_rawvalue(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_rawvalue();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_rawvalue();
  void set_allocated_rawvalue(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_rawvalue() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_rawvalue(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_rawvalue();

  public:
  // string entity = 2;
  void clear_entity() ;
  const ::std::string& entity() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_entity(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_entity();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_entity();
  void set_allocated_entity(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_entity() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_entity(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_entity();

  public:
  // string slotName = 3;
  void clear_slotname() ;
  const ::std::string& slotname() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_slotname(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_slotname();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_slotname();
  void set_allocated_slotname(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_slotname() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_slotname(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_slotname();

  public:
  // uint32 rangeStart = 4;
  void clear_rangestart() ;
  ::uint32_t rangestart() const;
  void set_rangestart(::uint32_t value);

  private:
  ::uint32_t _internal_rangestart() const;
  void _internal_set_rangestart(::uint32_t value);

  public:
  // uint32 rangeEnd = 5;
  void clear_rangeend() ;
  ::uint32_t rangeend() const;
  void set_rangeend(::uint32_t value);

  private:
  ::uint32_t _internal_rangeend() const;
  void _internal_set_rangeend(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:rero.Slot)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5,
                                   0, 40,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const Slot& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr rawvalue_;
    ::google::protobuf::internal::ArenaStringPtr entity_;
    ::google::protobuf::internal::ArenaStringPtr slotname_;
    ::uint32_t rangestart_;
    ::uint32_t rangeend_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_nlu_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull Slot_class_data_;
// -------------------------------------------------------------------

class NLURequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:rero.NLURequest) */ {
 public:
  inline NLURequest() : NLURequest(nullptr) {}
  ~NLURequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(NLURequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(NLURequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NLURequest(::google::protobuf::internal::ConstantInitialized);

  inline NLURequest(const NLURequest& from) : NLURequest(nullptr, from) {}
  inline NLURequest(NLURequest&& from) noexcept
      : NLURequest(nullptr, ::std::move(from)) {}
  inline NLURequest& operator=(const NLURequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline NLURequest& operator=(NLURequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NLURequest& default_instance() {
    return *reinterpret_cast<const NLURequest*>(
        &_NLURequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(NLURequest& a, NLURequest& b) { a.Swap(&b); }
  inline void Swap(NLURequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NLURequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NLURequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<NLURequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NLURequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NLURequest& from) { NLURequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(NLURequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "rero.NLURequest"; }

 protected:
  explicit NLURequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  NLURequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const NLURequest& from);
  NLURequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, NLURequest&& from) noexcept
      : NLURequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRequestFieldNumber = 1,
  };
  // string request = 1;
  void clear_request() ;
  const ::std::string& request() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_request(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_request();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_request();
  void set_allocated_request(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_request() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_request(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_request();

  public:
  // @@protoc_insertion_point(class_scope:rero.NLURequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   0, 31,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const NLURequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr request_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_nlu_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull NLURequest_class_data_;
// -------------------------------------------------------------------

class Intent final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:rero.Intent) */ {
 public:
  inline Intent() : Intent(nullptr) {}
  ~Intent() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Intent* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Intent));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Intent(::google::protobuf::internal::ConstantInitialized);

  inline Intent(const Intent& from) : Intent(nullptr, from) {}
  inline Intent(Intent&& from) noexcept
      : Intent(nullptr, ::std::move(from)) {}
  inline Intent& operator=(const Intent& from) {
    CopyFrom(from);
    return *this;
  }
  inline Intent& operator=(Intent&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Intent& default_instance() {
    return *reinterpret_cast<const Intent*>(
        &_Intent_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(Intent& a, Intent& b) { a.Swap(&b); }
  inline void Swap(Intent* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Intent* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Intent* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Intent>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Intent& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Intent& from) { Intent::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Intent* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "rero.Intent"; }

 protected:
  explicit Intent(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  Intent(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Intent& from);
  Intent(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, Intent&& from) noexcept
      : Intent(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSlotsFieldNumber = 4,
    kInputTextFieldNumber = 1,
    kIntentNameFieldNumber = 2,
    kProbabilityFieldNumber = 3,
  };
  // repeated .rero.Slot slots = 4;
  int slots_size() const;
  private:
  int _internal_slots_size() const;

  public:
  void clear_slots() ;
  ::rero::Slot* PROTOBUF_NONNULL mutable_slots(int index);
  ::google::protobuf::RepeatedPtrField<::rero::Slot>* PROTOBUF_NONNULL mutable_slots();

  private:
  const ::google::protobuf::RepeatedPtrField<::rero::Slot>& _internal_slots() const;
  ::google::protobuf::RepeatedPtrField<::rero::Slot>* PROTOBUF_NONNULL _internal_mutable_slots();
  public:
  const ::rero::Slot& slots(int index) const;
  ::rero::Slot* PROTOBUF_NONNULL add_slots();
  const ::google::protobuf::RepeatedPtrField<::rero::Slot>& slots() const;
  // string inputText = 1;
  void clear_inputtext() ;
  const ::std::string& inputtext() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_inputtext(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_inputtext();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_inputtext();
  void set_allocated_inputtext(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_inputtext() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_inputtext(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_inputtext();

  public:
  // string intentName = 2;
  void clear_intentname() ;
  const ::std::string& intentname() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_intentname(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_intentname();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_intentname();
  void set_allocated_intentname(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_intentname() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_intentname(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_intentname();

  public:
  // float probability = 3;
  void clear_probability() ;
  float probability() const;
  void set_probability(float value);

  private:
  float _internal_probability() const;
  void _internal_set_probability(float value);

  public:
  // @@protoc_insertion_point(class_scope:rero.Intent)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4,
                                   1, 39,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const Intent& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::rero::Slot > slots_;
    ::google::protobuf::internal::ArenaStringPtr inputtext_;
    ::google::protobuf::internal::ArenaStringPtr intentname_;
    float probability_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_nlu_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull Intent_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// NLURequest

// string request = 1;
inline void NLURequest::clear_request() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& NLURequest::request() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rero.NLURequest.request)
  return _internal_request();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void NLURequest::set_request(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.request_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rero.NLURequest.request)
}
inline ::std::string* PROTOBUF_NONNULL NLURequest::mutable_request()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_request();
  // @@protoc_insertion_point(field_mutable:rero.NLURequest.request)
  return _s;
}
inline const ::std::string& NLURequest::_internal_request() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.request_.Get();
}
inline void NLURequest::_internal_set_request(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.request_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL NLURequest::_internal_mutable_request() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.request_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE NLURequest::release_request() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rero.NLURequest.request)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.request_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.request_.Set("", GetArena());
  }
  return released;
}
inline void NLURequest::set_allocated_request(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.request_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.request_.IsDefault()) {
    _impl_.request_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rero.NLURequest.request)
}

// -------------------------------------------------------------------

// Intent

// string inputText = 1;
inline void Intent::clear_inputtext() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.inputtext_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& Intent::inputtext() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rero.Intent.inputText)
  return _internal_inputtext();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Intent::set_inputtext(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.inputtext_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rero.Intent.inputText)
}
inline ::std::string* PROTOBUF_NONNULL Intent::mutable_inputtext()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_inputtext();
  // @@protoc_insertion_point(field_mutable:rero.Intent.inputText)
  return _s;
}
inline const ::std::string& Intent::_internal_inputtext() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.inputtext_.Get();
}
inline void Intent::_internal_set_inputtext(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.inputtext_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Intent::_internal_mutable_inputtext() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.inputtext_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Intent::release_inputtext() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rero.Intent.inputText)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.inputtext_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.inputtext_.Set("", GetArena());
  }
  return released;
}
inline void Intent::set_allocated_inputtext(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.inputtext_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.inputtext_.IsDefault()) {
    _impl_.inputtext_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rero.Intent.inputText)
}

// string intentName = 2;
inline void Intent::clear_intentname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.intentname_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& Intent::intentname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rero.Intent.intentName)
  return _internal_intentname();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Intent::set_intentname(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.intentname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rero.Intent.intentName)
}
inline ::std::string* PROTOBUF_NONNULL Intent::mutable_intentname()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_intentname();
  // @@protoc_insertion_point(field_mutable:rero.Intent.intentName)
  return _s;
}
inline const ::std::string& Intent::_internal_intentname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.intentname_.Get();
}
inline void Intent::_internal_set_intentname(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.intentname_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Intent::_internal_mutable_intentname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.intentname_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Intent::release_intentname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rero.Intent.intentName)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.intentname_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.intentname_.Set("", GetArena());
  }
  return released;
}
inline void Intent::set_allocated_intentname(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.intentname_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.intentname_.IsDefault()) {
    _impl_.intentname_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rero.Intent.intentName)
}

// float probability = 3;
inline void Intent::clear_probability() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.probability_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline float Intent::probability() const {
  // @@protoc_insertion_point(field_get:rero.Intent.probability)
  return _internal_probability();
}
inline void Intent::set_probability(float value) {
  _internal_set_probability(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:rero.Intent.probability)
}
inline float Intent::_internal_probability() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.probability_;
}
inline void Intent::_internal_set_probability(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.probability_ = value;
}

// repeated .rero.Slot slots = 4;
inline int Intent::_internal_slots_size() const {
  return _internal_slots().size();
}
inline int Intent::slots_size() const {
  return _internal_slots_size();
}
inline void Intent::clear_slots() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.slots_.Clear();
}
inline ::rero::Slot* PROTOBUF_NONNULL Intent::mutable_slots(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:rero.Intent.slots)
  return _internal_mutable_slots()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::rero::Slot>* PROTOBUF_NONNULL Intent::mutable_slots()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:rero.Intent.slots)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_slots();
}
inline const ::rero::Slot& Intent::slots(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rero.Intent.slots)
  return _internal_slots().Get(index);
}
inline ::rero::Slot* PROTOBUF_NONNULL Intent::add_slots()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::rero::Slot* _add = _internal_mutable_slots()->Add();
  // @@protoc_insertion_point(field_add:rero.Intent.slots)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::rero::Slot>& Intent::slots() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:rero.Intent.slots)
  return _internal_slots();
}
inline const ::google::protobuf::RepeatedPtrField<::rero::Slot>&
Intent::_internal_slots() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.slots_;
}
inline ::google::protobuf::RepeatedPtrField<::rero::Slot>* PROTOBUF_NONNULL
Intent::_internal_mutable_slots() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.slots_;
}

// -------------------------------------------------------------------

// Slot

// string rawValue = 1;
inline void Slot::clear_rawvalue() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rawvalue_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& Slot::rawvalue() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rero.Slot.rawValue)
  return _internal_rawvalue();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Slot::set_rawvalue(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.rawvalue_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rero.Slot.rawValue)
}
inline ::std::string* PROTOBUF_NONNULL Slot::mutable_rawvalue()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_rawvalue();
  // @@protoc_insertion_point(field_mutable:rero.Slot.rawValue)
  return _s;
}
inline const ::std::string& Slot::_internal_rawvalue() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.rawvalue_.Get();
}
inline void Slot::_internal_set_rawvalue(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.rawvalue_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Slot::_internal_mutable_rawvalue() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.rawvalue_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Slot::release_rawvalue() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rero.Slot.rawValue)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.rawvalue_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.rawvalue_.Set("", GetArena());
  }
  return released;
}
inline void Slot::set_allocated_rawvalue(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.rawvalue_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.rawvalue_.IsDefault()) {
    _impl_.rawvalue_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rero.Slot.rawValue)
}

// string entity = 2;
inline void Slot::clear_entity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entity_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& Slot::entity() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rero.Slot.entity)
  return _internal_entity();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Slot::set_entity(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.entity_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rero.Slot.entity)
}
inline ::std::string* PROTOBUF_NONNULL Slot::mutable_entity()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_entity();
  // @@protoc_insertion_point(field_mutable:rero.Slot.entity)
  return _s;
}
inline const ::std::string& Slot::_internal_entity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.entity_.Get();
}
inline void Slot::_internal_set_entity(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.entity_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Slot::_internal_mutable_entity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.entity_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Slot::release_entity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rero.Slot.entity)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.entity_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.entity_.Set("", GetArena());
  }
  return released;
}
inline void Slot::set_allocated_entity(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.entity_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.entity_.IsDefault()) {
    _impl_.entity_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rero.Slot.entity)
}

// string slotName = 3;
inline void Slot::clear_slotname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.slotname_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::std::string& Slot::slotname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rero.Slot.slotName)
  return _internal_slotname();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Slot::set_slotname(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.slotname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rero.Slot.slotName)
}
inline ::std::string* PROTOBUF_NONNULL Slot::mutable_slotname()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_slotname();
  // @@protoc_insertion_point(field_mutable:rero.Slot.slotName)
  return _s;
}
inline const ::std::string& Slot::_internal_slotname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.slotname_.Get();
}
inline void Slot::_internal_set_slotname(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.slotname_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Slot::_internal_mutable_slotname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.slotname_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Slot::release_slotname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rero.Slot.slotName)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.slotname_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.slotname_.Set("", GetArena());
  }
  return released;
}
inline void Slot::set_allocated_slotname(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.slotname_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.slotname_.IsDefault()) {
    _impl_.slotname_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rero.Slot.slotName)
}

// uint32 rangeStart = 4;
inline void Slot::clear_rangestart() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rangestart_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::uint32_t Slot::rangestart() const {
  // @@protoc_insertion_point(field_get:rero.Slot.rangeStart)
  return _internal_rangestart();
}
inline void Slot::set_rangestart(::uint32_t value) {
  _internal_set_rangestart(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:rero.Slot.rangeStart)
}
inline ::uint32_t Slot::_internal_rangestart() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.rangestart_;
}
inline void Slot::_internal_set_rangestart(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rangestart_ = value;
}

// uint32 rangeEnd = 5;
inline void Slot::clear_rangeend() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rangeend_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::uint32_t Slot::rangeend() const {
  // @@protoc_insertion_point(field_get:rero.Slot.rangeEnd)
  return _internal_rangeend();
}
inline void Slot::set_rangeend(::uint32_t value) {
  _internal_set_rangeend(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:rero.Slot.rangeEnd)
}
inline ::uint32_t Slot::_internal_rangeend() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.rangeend_;
}
inline void Slot::_internal_set_rangeend(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rangeend_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace rero


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // nlu_2eproto_2epb_2eh
