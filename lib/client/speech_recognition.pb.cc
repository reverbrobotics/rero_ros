// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: speech_recognition.proto

#include "speech_recognition.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = ::PROTOBUF_NAMESPACE_ID::internal;
namespace rero {
template <typename>
PROTOBUF_CONSTEXPR SpeechRecognitionResult::SpeechRecognitionResult(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.result_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SpeechRecognitionResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SpeechRecognitionResultDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SpeechRecognitionResultDefaultTypeInternal() {}
  union {
    SpeechRecognitionResult _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SpeechRecognitionResultDefaultTypeInternal _SpeechRecognitionResult_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR VocabResult::VocabResult(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.result_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct VocabResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VocabResultDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VocabResultDefaultTypeInternal() {}
  union {
    VocabResult _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VocabResultDefaultTypeInternal _VocabResult_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR Vocab::Vocab(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.vocab_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct VocabDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VocabDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VocabDefaultTypeInternal() {}
  union {
    Vocab _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VocabDefaultTypeInternal _Vocab_default_instance_;
}  // namespace rero
static ::_pb::Metadata file_level_metadata_speech_5frecognition_2eproto[3];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_speech_5frecognition_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_speech_5frecognition_2eproto = nullptr;
const ::uint32_t TableStruct_speech_5frecognition_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::rero::SpeechRecognitionResult, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::rero::SpeechRecognitionResult, _impl_.result_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::rero::VocabResult, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::rero::VocabResult, _impl_.result_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::rero::Vocab, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::rero::Vocab, _impl_.vocab_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        { 0, -1, -1, sizeof(::rero::SpeechRecognitionResult)},
        { 9, -1, -1, sizeof(::rero::VocabResult)},
        { 18, -1, -1, sizeof(::rero::Vocab)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::rero::_SpeechRecognitionResult_default_instance_._instance,
    &::rero::_VocabResult_default_instance_._instance,
    &::rero::_Vocab_default_instance_._instance,
};
const char descriptor_table_protodef_speech_5frecognition_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\030speech_recognition.proto\022\004rero\032\013audio."
    "proto\")\n\027SpeechRecognitionResult\022\016\n\006resu"
    "lt\030\001 \001(\t\"\035\n\013VocabResult\022\016\n\006result\030\001 \001(\t\""
    "\026\n\005Vocab\022\r\n\005vocab\030\001 \001(\t2\204\001\n\021SpeechRecogn"
    "ition\022A\n\017RecognizeSpeech\022\013.rero.Audio\032\035."
    "rero.SpeechRecognitionResult\"\000(\001\022,\n\010SetV"
    "ocab\022\013.rero.Vocab\032\021.rero.VocabResult\"\000b\006"
    "proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_speech_5frecognition_2eproto_deps[1] =
    {
        &::descriptor_table_audio_2eproto,
};
static ::absl::once_flag descriptor_table_speech_5frecognition_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_speech_5frecognition_2eproto = {
    false,
    false,
    286,
    descriptor_table_protodef_speech_5frecognition_2eproto,
    "speech_recognition.proto",
    &descriptor_table_speech_5frecognition_2eproto_once,
    descriptor_table_speech_5frecognition_2eproto_deps,
    1,
    3,
    schemas,
    file_default_instances,
    TableStruct_speech_5frecognition_2eproto::offsets,
    file_level_metadata_speech_5frecognition_2eproto,
    file_level_enum_descriptors_speech_5frecognition_2eproto,
    file_level_service_descriptors_speech_5frecognition_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_speech_5frecognition_2eproto_getter() {
  return &descriptor_table_speech_5frecognition_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_speech_5frecognition_2eproto(&descriptor_table_speech_5frecognition_2eproto);
namespace rero {
// ===================================================================

class SpeechRecognitionResult::_Internal {
 public:
};

SpeechRecognitionResult::SpeechRecognitionResult(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rero.SpeechRecognitionResult)
}
SpeechRecognitionResult::SpeechRecognitionResult(const SpeechRecognitionResult& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SpeechRecognitionResult* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.result_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.result_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.result_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_result().empty()) {
    _this->_impl_.result_.Set(from._internal_result(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:rero.SpeechRecognitionResult)
}

inline void SpeechRecognitionResult::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.result_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.result_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.result_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SpeechRecognitionResult::~SpeechRecognitionResult() {
  // @@protoc_insertion_point(destructor:rero.SpeechRecognitionResult)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SpeechRecognitionResult::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.result_.Destroy();
}

void SpeechRecognitionResult::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SpeechRecognitionResult::Clear() {
// @@protoc_insertion_point(message_clear_start:rero.SpeechRecognitionResult)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SpeechRecognitionResult::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_result();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "rero.SpeechRecognitionResult.result"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* SpeechRecognitionResult::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:rero.SpeechRecognitionResult)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string result = 1;
  if (!this->_internal_result().empty()) {
    const std::string& _s = this->_internal_result();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "rero.SpeechRecognitionResult.result");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rero.SpeechRecognitionResult)
  return target;
}

::size_t SpeechRecognitionResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rero.SpeechRecognitionResult)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result = 1;
  if (!this->_internal_result().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SpeechRecognitionResult::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SpeechRecognitionResult::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SpeechRecognitionResult::GetClassData() const { return &_class_data_; }


void SpeechRecognitionResult::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SpeechRecognitionResult*>(&to_msg);
  auto& from = static_cast<const SpeechRecognitionResult&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:rero.SpeechRecognitionResult)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_result().empty()) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SpeechRecognitionResult::CopyFrom(const SpeechRecognitionResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rero.SpeechRecognitionResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpeechRecognitionResult::IsInitialized() const {
  return true;
}

void SpeechRecognitionResult::InternalSwap(SpeechRecognitionResult* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.result_, lhs_arena,
                                       &other->_impl_.result_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata SpeechRecognitionResult::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_speech_5frecognition_2eproto_getter, &descriptor_table_speech_5frecognition_2eproto_once,
      file_level_metadata_speech_5frecognition_2eproto[0]);
}
// ===================================================================

class VocabResult::_Internal {
 public:
};

VocabResult::VocabResult(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rero.VocabResult)
}
VocabResult::VocabResult(const VocabResult& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  VocabResult* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.result_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.result_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.result_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_result().empty()) {
    _this->_impl_.result_.Set(from._internal_result(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:rero.VocabResult)
}

inline void VocabResult::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.result_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.result_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.result_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

VocabResult::~VocabResult() {
  // @@protoc_insertion_point(destructor:rero.VocabResult)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void VocabResult::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.result_.Destroy();
}

void VocabResult::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void VocabResult::Clear() {
// @@protoc_insertion_point(message_clear_start:rero.VocabResult)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* VocabResult::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_result();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "rero.VocabResult.result"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* VocabResult::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:rero.VocabResult)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string result = 1;
  if (!this->_internal_result().empty()) {
    const std::string& _s = this->_internal_result();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "rero.VocabResult.result");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rero.VocabResult)
  return target;
}

::size_t VocabResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rero.VocabResult)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result = 1;
  if (!this->_internal_result().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData VocabResult::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    VocabResult::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*VocabResult::GetClassData() const { return &_class_data_; }


void VocabResult::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<VocabResult*>(&to_msg);
  auto& from = static_cast<const VocabResult&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:rero.VocabResult)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_result().empty()) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void VocabResult::CopyFrom(const VocabResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rero.VocabResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VocabResult::IsInitialized() const {
  return true;
}

void VocabResult::InternalSwap(VocabResult* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.result_, lhs_arena,
                                       &other->_impl_.result_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata VocabResult::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_speech_5frecognition_2eproto_getter, &descriptor_table_speech_5frecognition_2eproto_once,
      file_level_metadata_speech_5frecognition_2eproto[1]);
}
// ===================================================================

class Vocab::_Internal {
 public:
};

Vocab::Vocab(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rero.Vocab)
}
Vocab::Vocab(const Vocab& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Vocab* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.vocab_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.vocab_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.vocab_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_vocab().empty()) {
    _this->_impl_.vocab_.Set(from._internal_vocab(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:rero.Vocab)
}

inline void Vocab::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.vocab_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.vocab_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.vocab_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Vocab::~Vocab() {
  // @@protoc_insertion_point(destructor:rero.Vocab)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Vocab::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.vocab_.Destroy();
}

void Vocab::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Vocab::Clear() {
// @@protoc_insertion_point(message_clear_start:rero.Vocab)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.vocab_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Vocab::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string vocab = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_vocab();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "rero.Vocab.vocab"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* Vocab::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:rero.Vocab)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string vocab = 1;
  if (!this->_internal_vocab().empty()) {
    const std::string& _s = this->_internal_vocab();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "rero.Vocab.vocab");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rero.Vocab)
  return target;
}

::size_t Vocab::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rero.Vocab)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string vocab = 1;
  if (!this->_internal_vocab().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_vocab());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Vocab::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Vocab::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Vocab::GetClassData() const { return &_class_data_; }


void Vocab::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Vocab*>(&to_msg);
  auto& from = static_cast<const Vocab&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:rero.Vocab)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_vocab().empty()) {
    _this->_internal_set_vocab(from._internal_vocab());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Vocab::CopyFrom(const Vocab& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rero.Vocab)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Vocab::IsInitialized() const {
  return true;
}

void Vocab::InternalSwap(Vocab* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.vocab_, lhs_arena,
                                       &other->_impl_.vocab_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata Vocab::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_speech_5frecognition_2eproto_getter, &descriptor_table_speech_5frecognition_2eproto_once,
      file_level_metadata_speech_5frecognition_2eproto[2]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace rero
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::rero::SpeechRecognitionResult*
Arena::CreateMaybeMessage< ::rero::SpeechRecognitionResult >(Arena* arena) {
  return Arena::CreateMessageInternal< ::rero::SpeechRecognitionResult >(arena);
}
template<> PROTOBUF_NOINLINE ::rero::VocabResult*
Arena::CreateMaybeMessage< ::rero::VocabResult >(Arena* arena) {
  return Arena::CreateMessageInternal< ::rero::VocabResult >(arena);
}
template<> PROTOBUF_NOINLINE ::rero::Vocab*
Arena::CreateMaybeMessage< ::rero::Vocab >(Arena* arena) {
  return Arena::CreateMessageInternal< ::rero::Vocab >(arena);
}
PROTOBUF_NAMESPACE_CLOSE
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
